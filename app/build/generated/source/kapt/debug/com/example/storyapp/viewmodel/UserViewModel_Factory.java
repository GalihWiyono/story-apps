// Generated by Dagger (https://dagger.dev).
package com.example.storyapp.viewmodel;

import com.example.storyapp.model.UserPreference;
import com.example.storyapp.model.repo.UserRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserViewModel_Factory implements Factory<UserViewModel> {
  private final Provider<UserRepository> userRepositoryProvider;

  private final Provider<UserPreference> preferenceProvider;

  public UserViewModel_Factory(Provider<UserRepository> userRepositoryProvider,
      Provider<UserPreference> preferenceProvider) {
    this.userRepositoryProvider = userRepositoryProvider;
    this.preferenceProvider = preferenceProvider;
  }

  @Override
  public UserViewModel get() {
    return newInstance(userRepositoryProvider.get(), preferenceProvider.get());
  }

  public static UserViewModel_Factory create(Provider<UserRepository> userRepositoryProvider,
      Provider<UserPreference> preferenceProvider) {
    return new UserViewModel_Factory(userRepositoryProvider, preferenceProvider);
  }

  public static UserViewModel newInstance(UserRepository userRepository,
      UserPreference preference) {
    return new UserViewModel(userRepository, preference);
  }
}
