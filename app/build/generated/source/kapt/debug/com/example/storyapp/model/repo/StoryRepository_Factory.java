// Generated by Dagger (https://dagger.dev).
package com.example.storyapp.model.repo;

import com.example.storyapp.model.data.StoryPagingSource;
import com.example.storyapp.model.service.ApiService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class StoryRepository_Factory implements Factory<StoryRepository> {
  private final Provider<ApiService> apiServiceProvider;

  private final Provider<StoryPagingSource> storyPagingSourceProvider;

  public StoryRepository_Factory(Provider<ApiService> apiServiceProvider,
      Provider<StoryPagingSource> storyPagingSourceProvider) {
    this.apiServiceProvider = apiServiceProvider;
    this.storyPagingSourceProvider = storyPagingSourceProvider;
  }

  @Override
  public StoryRepository get() {
    return newInstance(apiServiceProvider.get(), storyPagingSourceProvider.get());
  }

  public static StoryRepository_Factory create(Provider<ApiService> apiServiceProvider,
      Provider<StoryPagingSource> storyPagingSourceProvider) {
    return new StoryRepository_Factory(apiServiceProvider, storyPagingSourceProvider);
  }

  public static StoryRepository newInstance(ApiService apiService,
      StoryPagingSource storyPagingSource) {
    return new StoryRepository(apiService, storyPagingSource);
  }
}
